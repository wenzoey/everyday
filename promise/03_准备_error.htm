<!DOCTYPE html>
<html>
  <head></head>
  <body>
    <script>
      /*
        JS中的错误（Error）和错误处理

        1. 错误的类型
          Error：所有错误的父类型
          ReferenceError：引用的变量不存在
          TypeError：数据类型不正确的错误
          RangeError：数据值不再其所允许的范围内
          SyntaxError：语法错误
        2. 错误处理
          捕获错误：try ... catch
          抛出错误：throw error
        3. 错误对象
          message属性：错误相关的信息
          stack属性：函数调用栈记录信息
      */

      // 1. 常见的内置错误
      // ReferenceError：引用的变量不存在
      // console.log(a)  // ReferenceError: a is not defined
      // TypeError：数据类型不正确的错误
      // let b = null;
      // console.log(b.xxx)  // TypeError:Cannot read property 'xxx' of undefined
      // b = {}
      // b.xxx() // TypeError: b.xxx is not a function
      // RangeError：数据值不再其所允许的范围内
      // function fn () {
      //   fn()
      // }
      // fn()  // RangeError: Maximum call stack size exceeded 嵌套层次有限制
      // SyntaxError：语法错误
      // const c = ''''  // SyntaxError: Unexpected string


      // 2. 错误处理
      // 捕获错误：try ... catch
      // try {
      //   let d;
      //   console.log(d.xxx)
      // } catch (error) {
      //   console.error(error.message)
      // }
      // console.log('出错之后')
      
      function something () {
        if (Date.now()%2===1) {
          console.log('当前时间为奇数，可以执行任务')
        } else {  // 如果时间是偶数，抛出异常，有调用来处理
          throw new Error('当前时间为偶数无法执行任务')
        }
      }
      // 捕获处理异常
      try {
        something()
      } catch (error) {
        console.error(error)
      }
    </script>
  </body>
</html>